# Recipe needed to apply patch on Windows.
# And to include numpy dependency, including pinning the version.

package:
  name: reproject
  version: "{{version}}"

source:
  fn: reproject-{{version}}.tar.gz
  url: https://pypi.io/packages/source/r/reproject/reproject-{{version}}.tar.gz
  md5: {{md5}}
  patches:
   # List any patch files here
    - windows_patch.diff [win]

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - reproject = reproject:main
    #
    # Would create an entry point called reproject that calls reproject.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - astropy >=1
    - numpy x.x
    - numpy >=1.9

  run:
    - python
    - astropy >=1
    - scipy
    - numpy x.x
    - numpy >=1.9

test:
  # Python imports
  imports:
    - reproject
    - reproject.healpix
    - reproject.interpolation
    - reproject.spherical_intersect
    - reproject.tests
    - reproject.healpix.tests
    - reproject.interpolation.tests
    - reproject.spherical_intersect.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home:  http://reproject.readthedocs.org
  license: BSD License
  summary: 'Python-based Astronomical image reprojection'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
