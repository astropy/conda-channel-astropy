# The language in this case has no bearing - we are going to be making use of "conda" for a
# python distribution for the scientific python stack.
language: c

os:
  - linux
  - osx

env:
    global:
        - DESTINATION_CONDA_CHANNEL="astropy"
        - TARGET_ARCH="x64"
        - CONDA_INSTALL_LOCN="${HOME}/miniconda"
        - PACKAGES_TO_COPY="copy_from.yaml"

        # Defines BINSTAR_TOKEN for your binstar channel
        - secure: "1Y5eKpseYF3aOZ97RfAZ/hykoK0xxG03Bv0Zxvnez3VPpF8AJM7vCWvuvSXYOqlSH2AqHtuLEMSsjkdIXrcyZ1FLGCXcTtY+2kT3QUxLXTvCCCStX4oodOGIgA/A973rjBcQNCFyHauvgivDE5ENUYUDU8bqBZbx0vOlCJC74dyFkTSklNpHTpM3pUh9rIjbhw603UBtVySLmk4X9sS/yf03Al9FEeT3q+jGQKYwT+VhXKakywlzWeoE/Y8PlrVkxdgzq3ktfXme+W8LzFTzY4gzgdHSTPj/A7SHHRkODnJxiW2iYKbDVp3ouBlYN+tq+Km1IA9Qo6wYdoYrHVh6w2F3L+2dr5qabtW6X4T0bulxA7pr2KgtDPpgfvmleIifaGlLe8hKUodQKZeQMiqy4zLUnk4KOmzq5HcRO+Mjn8c2uiPjU9P7aUy9gWrJHxd0uTrecrNHrqCpz3yepf+fpfIjo16iqB0Ck1JsjIg/cekQBRVFagZfSdIhg7f5B7Dq44sbYAmxLjaNgh6ArTmGkImPjJtqY5bllMHzp0r6IdnKswBYmafO2lZjqHWBP6mtvtJC1tWBBFezWPG/jRbqHM98J3UtGVVKKsHiseX97Z4il9mb0SvLDtwEf0ZyMZnSxhHt5wbPV5X+LxTSSjjztb38/BAN3ZwxaRxftKyeuIY="

        # The python build restriction MUST be set at the moment, though it
        # can have any value. The setting below avoids known-bad builds on
        # python 2.6 and 3.3 for some packages.
        - PYTHON_BUILD_RESTRICTIONS="2.7*|>=3.5"
        # If you want to restrict the numpy version beyond what is in the
        # individual package requirements, do that here. Can be helpful after
        # a new numpy release while continuum and conda-forge are still building
        # out support for the release.

        # If you do not want a numpy build restriction, set
        - NUMPY_BUILD_RESTRICTION=

        # The value below needs to be set but will be ignored.
        - CONDA_NPY="1.12"
        - CONDA_VERSION=4.2*
        # the python version restriction above overrides this broader setting.
        - MAX_N_MINOR_VERSIONS="2"

# Matrix is fully specified (for now) by os versions

install:
    # Install and set up miniconda.
    - if [ $TRAVIS_OS_NAME == "linux" ]; then wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
    - if [ $TRAVIS_OS_NAME == "osx" ]; then wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
    - bash miniconda.sh -b -p $CONDA_INSTALL_LOCN
    - export PATH=${CONDA_INSTALL_LOCN}/bin:$PATH
    - conda config --set always_yes true

    # - PIN_FILE_CONDA=${CONDA_INSTALL_LOCN}/conda-meta/pinned
    # - echo "conda ${CONDA_VERSION}" > $PIN_FILE_CONDA

    - conda update --quiet conda

    # Install a couple of dependencies we need for sure.
    - conda install --quiet --yes astropy anaconda-client=1.6.2 jinja2 cython pycrypto

    - conda config --add channels astropy
    - conda config --add channels astropy-ci-extras
    - conda config --add channels conda-forge

    # "Add" defaults to make it the highest priority channel to avoid
    # downgrading conda itself from conda-forge.
    - conda config --add channels defaults

    - conda install conda-build=2

    # Install conda-build-all
    - conda install -c conda-forge conda-build-all

    # Finally, install extruder
    - conda install -c astropy extruder

    # To ease debugging, list installed packages
    - conda info -a

script:
    # Only upload if this is NOT a pull request.
    - UPLOAD="";
    - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
        if [ $TRAVIS_REPO_SLUG = "astropy/conda-channel-astropy" ]; then
          echo "Uploading enabled";
          UPLOAD="--upload-channels $DESTINATION_CONDA_CHANNEL";
        fi;
      fi
    # Get ready to build.
    - extrude_recipes requirements.yml
    # If there are packages to copy, do that first, but only if UPLOAD is set,
    # and only on Linux, since those travis machines are fastest. Copy only
    # needs to happen once to copy all available builds.
    - if [ -e $PACKAGES_TO_COPY ] && [ $TRAVIS_OS_NAME == "linux" ]; then
        echo "Will potentially copy these packages when merged:";
        cat $PACKAGES_TO_COPY;
        if [ ! -z "$UPLOAD" ]; then
          copy_packages $PACKAGES_TO_COPY $DESTINATION_CONDA_CHANNEL;
        fi
      fi
    # Packages are uploaded as they are built.

    - if [[ -d recipes ]]; then conda build-all recipes --matrix-conditions "python $PYTHON_BUILD_RESTRICTIONS" $NUMPY_BUILD_RESTRICTION  --matrix-max-n-minor-versions $MAX_N_MINOR_VERSIONS --inspect-channels conda-forge astropy $UPLOAD; fi
