# Configure appveyor for builds.

environment:
  # Anaconda.org channel to which packages should be uploaded.
  DESTINATION_CONDA_CHANNEL: "astropy"

  # Appveyor machines come with miniconda already installed.
  CONDA_INSTALL_LOCN: "C:\\Miniconda3-x64"

  # Need this to set up compilation on Windows.
  CMD_IN_ENV: cmd /E:ON /V:ON /C Obvious-CI\scripts\obvci_appveyor_python_build_env.cmd
  # Python version restrictions that should apply to all builds regardless
  # of any package-specific version restrictions
  PYTHON_BUILD_RESTRICTIONS: "2.7*|>=3.4"

  BINSTAR_TOKEN:
    # Paste the security token for your destination conda channel here.
    secure: In551w7v371boSMxAcNcHccXMbcLyVImifhayYopb02ZqkUGYV8QyDu1tjVbKaJz

  # The value below will be ignored but needs to be set for conda-build-all
  CONDA_NPY: "1.11"

  matrix:
    # Unfortunately, compiler/SDK configuration for 64 bit builds depends on
    # python version. Right now conda build does not configure the SDK, and
    # the appveyor setup only sets up the SDK once, so separate by python
    # versions.
    - TARGET_ARCH: "x64"
      PYTHON_BUILD_RESTRICTIONS: "2.7*"
      CONDA_PY: "27"
    - TARGET_ARCH: "x64"
      PYTHON_BUILD_RESTRICTIONS: "3.4*"
      CONDA_PY: "34"
    - TARGET_ARCH: "x64"
      PYTHON_BUILD_RESTRICTIONS: "3.5*"
      CONDA_PY: "35"
    # For 32 bit builds there are no compiler issues, let Obvious-CI
    # handle the matrix.
    # - TARGET_ARCH: "x86"
    #   PYTHON_BUILD_RESTRICTIONS: "2.7*|>=3.4"

# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable.
platform:
    - x64

install:
    # Clone simply to get the script for setting up Windows build environment.
    - cmd: git clone https://github.com/pelson/Obvious-CI.git

    # No need to install miniconda because appveyor comes with it.
    - cmd: SET PATH=%CONDA_INSTALL_LOCN%;%CONDA_INSTALL_LOCN%\Scripts;%PATH%

    - cmd: conda config --set always_yes true
    - cmd: conda update --quiet conda
    - cmd: conda config --add channels astropy
    - cmd: conda config --add channels conda-forge
    - cmd: conda install conda-build=2.0.10
    - cmd: conda install --quiet astropy anaconda-client jinja2 cython
    # These installs are needed on windows but not other platforms.
    - cmd: conda install patch psutil
    - cmd: conda install -c conda-forge conda-build-all=1.0*

    # Finally, install extruder
    - cmd: conda install extruder

# Skip .NET project specific build phase.
build: off

test_script:
    # So what does it looks like if a variable is undefined in appveyor?
    - set UPLOAD=
    - if not defined APPVEYOR_PULL_REQUEST_NUMBER (if %APPVEYOR_ACCOUNT_NAME%==Astropy (set UPLOAD=--upload-channels %DESTINATION_CONDA_CHANNEL%))
    - echo Upload is %UPLOAD%
    # Get ready to build.
    - "extrude_recipes requirements.yml"
    # Packages are uploaded as they are built.
    - if exist recipes conda build-all recipes --matrix-conditions="python %PYTHON_BUILD_RESTRICTIONS%"  --inspect-channels conda-forge astropy %UPLOAD%
